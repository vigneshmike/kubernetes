---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch1-service
spec:
  selector:
    app: elasticsearch1
  ports:
  - protocol: TCP
    port: 9200
    targetPort: 9200

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: elasticsearch1-configmap
data:
  bootstrap.memory_lock: "true"
  xpack.security.enabled: "false"
  discovery.type: single-node
  network.publish_host:  "0.0.0.0"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: elasticsearchs-configmap
data:
  elasticsearch.yml: |

    cluster.name: "elasticsearch"

    network.host: 0.0.0.0

    node.name: "es-fw-data"

    node.master: true

    node.data: true

    node.ingest: true

    node.ml: false

    cluster.remote.connect: false

    # minimum_master_nodes need to be explicitly set when bound on a public IP
    # set to 1 to allow single node clusters
    # Details: https://github.com/elastic/elasticsearch/pull/17288
    discovery.zen.minimum_master_nodes: 1


---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: elasticsearch1-pvc-volume
spec:
  resources:
   requests:
     storage: 1Gi
  accessModes:
    - ReadWriteOnce
  storageClassName: gp2  
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: elasticsearch1-deployment
  labels:
    app: elasticsearch1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: elasticsearch1
  template:
    metadata:
      labels:
        app: elasticsearch1
    spec:
      containers:
      - name: elasticsearch1
        image: docker.elastic.co/elasticsearch/elasticsearch:6.8.23
        ports:
        - containerPort: 9200
        - containerPort: 9300
        envFrom:
        - configMapRef:
            name: elasticsearch1-configmap
        volumeMounts:
        - name: elasticsearchs-volume
          mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
          subPath: elasticsearch.yml
        volumeMounts:  
        - name: data
          mountPath: /usr/share/elasticsearch/data  
      volumes:
      - name: elasticsearchs-volume
        configMap:
          name: elasticsearchs-configmap
      volumes:   
      - name: data
        persistentVolumeClaim:
          claimName: elasticsearch1-pvc-volume    
      nodeSelector:
        nodeLabelname: fwtestnode2  


---
apiVersion: v1
kind: ConfigMap
metadata:
  name: searchservice-configmap
data:
  filePath: "/opt/users.json" 
  spring_data_elasticsearch_cluster-nodes: "elasticsearch1-service:9300"
  mainAliasName: data
  flexwhereURL: "https://dutchview.test.flexwhere.com" 
  token: gDeeWYBvFsqwWaiSjfrEfdaUv 
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: searchservice-deployment
  labels:
    app: searchservice
spec:
  replicas: 1
  selector:
    matchLabels:
      app: searchservice
  template:
    metadata:
      labels:
        app: searchservice
    spec:
      containers:
      - name: searchservice
        image: docker.flexwhere.com/search_engine:FS25102022
        ports:
        - containerPort: 8080
        envFrom:
          - configMapRef:
              name: searchservice-configmap
      imagePullSecrets:
      - name: fwregistry-secret
      nodeSelector:
        nodeLabelname: fwtestnode2
---
apiVersion: v1
kind: Service
metadata:
  name: search-service
spec:
  selector:
    app: searchservice
  type: NodePort
  ports:
    - protocol: TCP
      port: 8081
      targetPort: 8080
      nodePort: 32759
